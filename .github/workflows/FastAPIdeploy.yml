name: Deploy Introgy FastAPI Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt

    # (Optional) Run tests if you have any
    # - name: Run tests
    #   run: pytest

    - name: Package backend code
      run: |
        zip -r introgy-backend.zip introgy-backend

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-package
        path: introgy-backend.zip

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-package

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Setup SSH known hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        EC2_HOST: "ubuntu@3.28.199.179"
      run: |
        # Transfer backend package
        scp -o StrictHostKeyChecking=accept-new introgy-backend.zip ${EC2_HOST}:~/

        # Unzip and deploy on EC2
        ssh ${EC2_HOST} "
          rm -rf ~/introgy-backend-old
          mv ~/introgy-backend ~/introgy-backend-old 2>/dev/null || true
          unzip -o ~/introgy-backend.zip -d ~/
          cd ~/introgy-backend
          if [ ! -d venv ]; then python3 -m venv venv; fi
          source venv/bin/activate
          pip install -r requirements.txt
          sudo systemctl restart introgy-backend
          rm ~/introgy-backend.zip
        "

    - name: Send deployment notification
      run: |
        echo "ðŸš€ Introgy FastAPI backend deployment completed successfully!"
